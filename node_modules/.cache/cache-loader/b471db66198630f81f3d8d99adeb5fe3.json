{"remainingRequest":"/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/node_modules/babel-loader/lib/index.js!/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/src/components/comps/Login.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/src/components/comps/Login.vue","mtime":1530279583103},{"path":"/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/.babelrc","mtime":1526042178000},{"path":"/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubzsolutions/Documents/Ativadores/offline1 - beta - v1/node_modules/vue-loader/lib/index.js","mtime":1525995699000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import Spinner from '@/components/comps/Spinner'\n//import {mapGetters} from 'vuex'\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport Swiper from 'swiper';\nexport default {\n  name: 'login',\n  components: {\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  data: function data() {\n    return {\n      fullscreenLoading: false,\n      credentials: {\n        username: '',\n        password: ''\n      },\n      loggingIn: false,\n      error: ''\n    };\n  },\n  computed: {\n    dcounter: function dcounter() {\n      return this.$store.getters.getterUsrN;\n    }\n  },\n  methods: {\n    submit: function submit() {\n      /*  const loading = this.$loading({\n         lock: true,\n         text: 'Loading',\n        // spinner: 'el-icon-loading',\n         background: 'rgba(0, 0, 0, 0.7)'\n       });*/\n      this.loggingIn = true;\n      var credentials = {\n        username: this.credentials.username,\n        password: this.credentials.password\n      };\n      console.log(credentials);\n      this.$store.dispatch('setUsrN', this.credentials); //UsrN = this.credentials.username;\n      //this.$store.state.UsrN = this.credentials.username;\n      // console.log(UsrN);\n\n      var mySwiper = new Swiper('.swiper-container', {\n        // ...\n        on: {\n          init: function init() {\n            console.log('swiper initialized');\n          }\n        }\n      });\n      mySwiper.slideTo(1);\n      /*   setTimeout(() => {\n         //loading.close();\n           mySwiper.slideTo(1);\n       }, 2000);\n       \n      // Auth.login() returns a promise. A redirect will happen on success.\n      // For errors, use .then() to capture the response to output\n      // error_description (if exists) as shown below:\n      this.$auth.login(credentials, 'dashboard').then((response) => {\n       this.loggingIn = false\n       this.error = utils.getError(response)\n      });*/\n    },\n    openFullScreen: function openFullScreen() {\n      var _this = this;\n\n      this.fullscreenLoading = true;\n      setTimeout(function () {\n        _this.fullscreenLoading = false;\n      }, 2000);\n    },\n    openFullScreen2: function openFullScreen2() {\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      setTimeout(function () {\n        loading.close();\n      }, 2000);\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,AACA;;AACA,AACA,SACA,QACA,mBACA;;AACA;QAEA;;;AACA;;wBACA;;yBAEA;;kBAEA;kBACA,AACA;AAHA;iBAIA;aACA,AACA;AARA;AASA;;kCAEA;iCACA;AACA,AACA;AAJA;;8BAMA;AACA,AACA,AACA,AACA,AACA,AAIA;;;;;;uBACA;;mCAEA;mCACA,AACA;AAHA;kBAIA;2CACA,cACA;AACA;AACA;;;AAEA;;gCAEA;wBACA;AACA,AACA,AACA;AALA;AAFA;uBAQA;AACA,AACA,AACA,AAEA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;AAEA;;AACA;;+BACA;6BACA;kCACA;SACA;AACA;gDACA;;cAEA;cACA;iBACA;oBACA,AACA;AALA;6BAMA;gBACA;SACA;AACA,AACA;AA7DA;AAnBA","file":"Login.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n  <div class=\"ev-login col-sm-4 offset-sm-4\">\n   <!-- <spinner v-show=\"loggingIn\" message=\"Logging in...\"></spinner>-->\n    <img id=\"imgSid\" src=\"@/assets/sid.png\" width=\"200px\" height=\"auto\"/> \n    <div class=\"alert alert-danger\" v-if=\"error\">\n      <p>{{ error }}</p>\n    </div>\n    <div class=\"form-group \">\n      <input \n        type=\"text\"\n        data-id=\"login.username\" \n        class=\"form-control js-login__username w33\"\n        placeholder=\"Enter your username\"\n        v-model=\"credentials.username\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <input\n        type=\"password\"\n        class=\"form-control js-login__password w33 \"\n        placeholder=\"Enter your password\"\n        v-model=\"credentials.password\"\n      >\n    </div>\n    <button \n      data-id=\"login.submit\"\n      class=\"btn btn-primary solid black js-login__submit\" \n      @click=\"submit()\"\n    >\n       Entrar&nbsp; <i class=\"fa fa-arrow-circle-o-right\"></i>\n    </button>\n    <br><br><br>\n    <a href=\"#\">Esqueci minhas credenciais</a><br>\n    Donâ€™t have an account? &nbsp;<a href=\"#\">Sign up here.</a>\n    <span></span>\n  </div>\n</template>\n<script>\n//import Spinner from '@/components/comps/Spinner'\n  //import {mapGetters} from 'vuex'\nimport {\n        swiper,\n        swiperSlide\n    } from 'vue-awesome-swiper'\n    import Swiper from 'swiper'\nexport default {\n  name: 'login',\n  components: { swiper, swiperSlide },\n  data () {\n    return {\n        fullscreenLoading: false,\n      credentials: {\n        username: '',\n        password: ''\n      },\n      loggingIn: false,\n      error: ''\n    }\n  },\n computed: { \n            dcounter() {\n                return this.$store.getters.getterUsrN;\n            },\n        },  \n  methods: {\n    submit () {\n       /*  const loading = this.$loading({\n          lock: true,\n          text: 'Loading',\n         // spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });*/\n        \n        \n        \n      this.loggingIn = true\n      const credentials = {\n        username: this.credentials.username,\n        password: this.credentials.password\n      }\n      console.log(credentials);\n       this.$store.dispatch('setUsrN', this.credentials);\n        //UsrN = this.credentials.username;\n        //this.$store.state.UsrN = this.credentials.username;\n       // console.log(UsrN);\n     var mySwiper = new Swiper('.swiper-container', {\n  // ...\n  on: {\n    init: function () {\n      console.log('swiper initialized');\n    },\n  },\n});\n        mySwiper.slideTo(1);\n       /*   setTimeout(() => {\n          //loading.close();\n            mySwiper.slideTo(1);\n        }, 2000);\n        \n      // Auth.login() returns a promise. A redirect will happen on success.\n      // For errors, use .then() to capture the response to output\n      // error_description (if exists) as shown below:\n    this.$auth.login(credentials, 'dashboard').then((response) => {\n        this.loggingIn = false\n        this.error = utils.getError(response)\n      });*/\n    },\n      \n      openFullScreen() {\n        this.fullscreenLoading = true;\n        setTimeout(() => {\n          this.fullscreenLoading = false;\n        }, 2000);\n      },\n      openFullScreen2() {\n        const loading = this.$loading({\n          lock: true,\n          text: 'Loading',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        setTimeout(() => {\n          loading.close();\n        }, 2000);\n      }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n    #imgSid{\n        position: relative;\n        top: -10vh;\n        margin-left: 1.3em;\n    }\n    .form-group{\n        position: relative;\n     top: -50px;\n        margin: 1em;\n    }\n.ev-login {\n  //margin-top: 100px;\n}\nbutton {\n    color: aliceblue;\n    width: 200px;\nbackground-color: #000;\n\tfont-size: 1em;\n\tpadding: 1em 2em;\n\tborder: none !important;\n\tborder-radius: 3px;\n\tbox-shadow: none;\n}\n</style>\n"]}]}